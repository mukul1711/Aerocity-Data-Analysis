# -*- coding: utf-8 -*-
"""Aerofit Case Study

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dsgAQ-5cKbccg0IhzJaCO_do3DQcrwrf
"""

# Importing the relevant libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/125/original/aerofit_treadmill.csv?1639992749')

df.head()

#Checking if there are any NULL values
df.info()

df.describe()

df['MaritalStatus'].value_counts()

for i in df.columns:
  print(i," - ",df[i].nunique())

df['Gender'].value_counts()

df['Usage'].value_counts()

df['Fitness'].value_counts()

sns.histplot(x = 'Income', data = df, bins = 5)

sns.countplot(x = 'Product', data = df)

"""**Observations:**

*   There are no missing/ NULL values in the dataset
*   The dataset contains 8 different types of features/ variables
*   There are 3 unique products i.e, KP281, KP481, KP781. KP281 is the most frequently bought product
*   Median age of the people in the dataset is 26 years while the median education (in years) is 16
*   Standard Deviation for Income and miles is very high. There might be some outliers present in the dataset





"""

fig, axis = plt.subplots(nrows = 3, ncols = 2)

sns.histplot(x = 'Age', data = df, kde = True, ax=axis[0,0])
sns.histplot(x = 'Gender', data = df, ax=axis[0,1])
sns.histplot(x = 'Education', data = df, kde = True, ax=axis[1,0])
sns.histplot(x = 'MaritalStatus', data = df, ax=axis[1,1])
sns.histplot(x = 'Usage', data = df, kde = True, ax=axis[2,0])
sns.histplot(x = 'Fitness', data = df, kde = True, ax=axis[2,1])

fig, axis = plt.subplots(nrows = 2)

sns.boxplot(x = 'Income', data = df, orient = 'h', ax = axis[0])
sns.boxplot(x = 'Miles', data = df, orient = 'h', ax = axis[1])

"""**Observations:**

*   Hence, we can see that the features Income and Miles have outliers present
*   There are more males in the dataset then females
*   There are more partners in the dataset than single people

### **Assessing Impact of Gender on Product**
"""

prod_gend = pd.crosstab(df['Gender'], df['Product'], normalize = True, margins = True)
prod_gend

for i in prod_gend:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_gend[i][0]/prod_gend['All'][0]
  prob_i_given_cat2 = prod_gend[i][1]/prod_gend['All'][1]

  print("Probability of buying",i,"given the buyer is",prod_gend.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_gend.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,":",f"{prod_gend[i]['All']:.1%}")

"""**Observations:**

*   There is a slightly higher probability of buying KP281 or KP481, if the person is Female.
*   For KP781, there is a very high probability of buying if the person is male.

# **Assessing the Impact of Age on Product**
"""

sns.histplot(x = 'Age', data = df, bins = 5)

def age_converter(x):
  if x <= 25:
    return 'Young Adult'
  elif x <= 30:
    return 'Emerging Adults'
  elif x <= 35:
    return 'Early Middle Age'
  elif x <= 40:
    return 'Mid-Life Adults'
  elif x <= 45:
    return 'Late Middle Age'
  else:
    return 'Pre-Senior Adults'

df['Age_Bracket'] = df['Age'].apply(age_converter)
df.head()

prod_age = pd.crosstab(df['Age_Bracket'], df['Product'], normalize = True, margins = True)
prod_age

for i in prod_age:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_age[i][0]/prod_age['All'][0]
  prob_i_given_cat2 = prod_age[i][1]/prod_age['All'][1]
  prob_i_given_cat3 = prod_age[i][2]/prod_age['All'][2]
  prob_i_given_cat4 = prod_age[i][3]/prod_age['All'][3]
  prob_i_given_cat5 = prod_age[i][4]/prod_age['All'][4]
  prob_i_given_cat6 = prod_age[i][5]/prod_age['All'][5]


  print("Probability of buying",i,"given the buyer is",prod_age.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_age.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_age.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_age.index[3],":",f"{prob_i_given_cat4:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_age.index[4],":",f"{prob_i_given_cat5:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_age.index[5],":",f"{prob_i_given_cat6:.1%}")
  print("Probability of buying",i,":",f"{prod_age[i]['All']:.1%}")

"""**Observations:**

*   The data is skewed towards right with the most number of people lying in the age between 20-30
*  From the analysis, it's evident that KP281 is more popular in the age group of Emerging Adults or people with Age 35 and above.
*   KP481 is significantly popular among the Early Middle Age group (31-35)
*   KP781 is relatively popular among people with age 41 and above

# **Assessing the Impact of Education on Product**
"""

sns.histplot(x = 'Education', data = df, bins = 5)

def education_converter(x):
  if x <= 14:
    return 'Junior High Education'
  elif x <= 16:
    return 'High School Education'
  elif x <= 18:
    return 'Secondary Education'
  elif x <= 20:
    return 'Higher Education'
  else:
    return 'Post-Secondary Education'

df['Education_Bracket'] = df['Education'].apply(education_converter)
df.head()

prod_education = pd.crosstab(df['Education_Bracket'], df['Product'], normalize = True, margins = True)
prod_education

for i in prod_education:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_education[i][0]/prod_education['All'][0]
  prob_i_given_cat2 = prod_education[i][1]/prod_education['All'][1]
  prob_i_given_cat3 = prod_education[i][2]/prod_education['All'][2]
  prob_i_given_cat4 = prod_education[i][3]/prod_education['All'][3]
  prob_i_given_cat5 = prod_education[i][4]/prod_education['All'][4]

  print("Probability of buying",i,"given the buyer is",prod_education.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_education.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_education.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_education.index[3],":",f"{prob_i_given_cat4:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_education.index[4],":",f"{prob_i_given_cat5:.1%}")
  print("Probability of buying",i,":",f"{prod_education[i]['All']:.1%}")

"""**Observations:**
*   For people with educations <=16 years (Junior High and High School), KP281 and KP481 are the preferred products.
*   Possible reason for this could be that KP281 and KP481 and relatively cheaper for high school students
*   For people with educations >17 years, KP781 has a very high buying propensity

# **Assessing the Impact of Marital Status on Product**
"""

sns.countplot(x = 'MaritalStatus', data = df)

prod_marital = pd.crosstab(df['MaritalStatus'], df['Product'], normalize = True, margins = True)
prod_marital

for i in prod_marital:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_marital[i][0]/prod_marital['All'][0]
  prob_i_given_cat2 = prod_marital[i][1]/prod_marital['All'][1]

  print("Probability of buying",i,"given the buyer is",prod_marital.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_marital.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,":",f"{prod_marital[i]['All']:.1%}")

"""**Observations:**
*   No significant impact has been found on buying preference of the product due to Marital Status

# **Assessing the Impact of Product Usage on Product**
"""

sns.countplot(x = 'Usage', data = df)

def usage_converter(x):
  if x <= 2:
    return 'Light Users'
  elif x <= 4:
    return 'Moderate Users'
  else:
    return 'Heavy Users'

df['Usage_Category'] = df['Usage'].apply(usage_converter)
df.head()

prod_usage = pd.crosstab(df['Usage_Category'], df['Product'], normalize = True, margins = True)
prod_usage

for i in prod_usage:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_usage[i][0]/prod_usage['All'][0]
  prob_i_given_cat2 = prod_usage[i][1]/prod_usage['All'][1]
  prob_i_given_cat3 = prod_usage[i][2]/prod_usage['All'][2]

  print("Probability of buying",i,"given the buyer is",prod_usage.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_usage.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_usage.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,":",f"{prod_usage[i]['All']:.1%}")

"""**Observations:**

*   There is a higher propability of buying KP281 or KP481 if the person is a light user
*   There is a very high probability of buying KP781 is the person is a heavy user

# **Assessing the Impact of Fitness on Product**
"""

sns.countplot(x = 'Fitness', data = df)

def fitness_converter(x):
  if x <= 2:
    return 'Unfit'
  elif x <= 4:
    return 'Moderately Fit'
  else:
    return 'Very Fit'

df['Fitness_Category'] = df['Usage'].apply(fitness_converter)
df.head()

prod_fitness = pd.crosstab(df['Fitness_Category'], df['Product'], normalize = True, margins = True)
prod_fitness

for i in prod_fitness:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_fitness[i][0]/prod_fitness['All'][0]
  prob_i_given_cat2 = prod_fitness[i][1]/prod_fitness['All'][1]
  prob_i_given_cat3 = prod_fitness[i][2]/prod_fitness['All'][2]

  print("Probability of buying",i,"given the buyer is",prod_fitness.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_fitness.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_fitness.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,":",f"{prod_fitness[i]['All']:.1%}")

"""**Observations:**

*   The results are similar to the impact of product usage section.
*   Possible reason could be that heavy users of the product tends to be more fit while the light users are unfit

# **Assessing the Impact of Miles on Product**
"""

sns.histplot(x = 'Miles', data = df, bins = 5)

def miles_converter(x):
  if x >= 0.8*df['Miles'].max():
    return 'Athlete'
  elif x >= 0.5*df['Miles'].max():
    return 'Moderate Runner'
  else:
    return 'Light Runner'

df['Miles_Category'] = df['Miles'].apply(miles_converter)
df.head()

prod_miles = pd.crosstab(df['Miles_Category'], df['Product'], normalize = True, margins = True)
prod_miles

for i in prod_miles:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_miles[i][0]/prod_miles['All'][0]
  prob_i_given_cat2 = prod_miles[i][1]/prod_miles['All'][1]
  prob_i_given_cat3 = prod_miles[i][2]/prod_miles['All'][2]

  print("Probability of buying",i,"given the buyer is",prod_miles.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_miles.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_miles.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,":",f"{prod_miles[i]['All']:.1%}")

"""**Observations:**

*   KP781 is the most preferred option among Moderate runners and athletes

# **Assessing the Impact of Income on Product**
"""

sns.histplot(x = 'Income', data = df, bins = 5)

def income_converter(x):
  if x >= 0.7*df['Income'].max():
    return 'High Income'
  elif x >= 0.5*df['Income'].max():
    return 'Upper-Middle-Income'
  elif x >= 0.3*df['Income'].max():
    return 'Middle-Income'
  else:
    return 'Low-Income'

df['Income_Category'] = df['Income'].apply(income_converter)
df.head()

prod_income = pd.crosstab(df['Income_Category'], df['Product'], normalize = True, margins = True)
prod_income

for i in prod_income:
  if i == 'All':
    break

  print("\n",i,"-------->\n")

  prob_i_given_cat1 = prod_income[i][0]/prod_income['All'][0]
  prob_i_given_cat2 = prod_income[i][1]/prod_income['All'][1]
  prob_i_given_cat3 = prod_income[i][2]/prod_income['All'][2]
  prob_i_given_cat4 = prod_income[i][3]/prod_income['All'][3]

  print("Probability of buying",i,"given the buyer is",prod_income.index[0],":",f"{prob_i_given_cat1:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_income.index[1],":",f"{prob_i_given_cat2:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_income.index[2],":",f"{prob_i_given_cat3:.1%}")
  print("Probability of buying",i,"given the buyer is",prod_income.index[3],":",f"{prob_i_given_cat4:.1%}")
  print("Probability of buying",i,":",f"{prod_income[i]['All']:.1%}")

"""**Observations:**


*   KP781 being the most expensive bike, is very popular among High Income earners
*   KP481 is more popular among Upper Middle Income people
*   KP281 being the cheapest bike, is highly popular among Low Income earners




"""

sns.heatmap(df.corr())

"""**Summary:**

*   Gender has a low impact on product preference. However, KP781 is more popular among females, while for males, its is KP281 or KP481
*   KP281 is popular among people in the age group 26-30, for KP481, it is 31-35 and KP781 is more popular among people in the age group of 41 and above
*   KP281 and KP481 is the preferred option for people if education <= 16 years (probably dur to its relatively cheaper price). For people with education >= 17 years, KP781 has a higher buying propensity
*   Marital Status has no impact on the buying preference
*   There is a higher propability of buying KP281 or KP481 if the person is a light user/moderate (usage <= 4 times per week)  user or is unfit/ moderately fit (fitness level <= 4)
*   KP781 is the preferred choice for a heavy user (usage >= 5 times per week) and a person is very fit (fitness level = 5)
*   If the customer expects to walk/run greater than 180 Miles per week, it is more likely that the customer will buy KP781 product.
*   If the person is a high income earner, they are more likely to buy KP781. For low income earners, KP281 is the preferred choice.

**Final Recommendations:**

*   Education, Fitness Level/ Usage, Miles Per Week, Income are the most influential factors driving user's choice.
*   KP281 is a more mass-level product which is suited for people with moderate education level, low-income/ middle income, fitness level <= 4 and aiming to use the product <= 4 times per week.
*   KP481 is the slightly premium product which targets people falling within similar fitness and education category as KP281 but can be targeted towards middle to upper-middle income earners.
*   KP781 being the most premium and advanced product can be targeted towards specialized customers i.e, education >= 17 years, high income, relatively fit and aiming to use the product heavily (>= 5 times per week).
"""



